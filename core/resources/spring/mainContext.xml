<?xml version="1.0" encoding="UTF-8"?>
<!-- Repository and Service layers -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">
	
	<context:annotation-config /> <!-- This Enables Autowiring -->
	<context:property-placeholder location='classpath:config.properties' />

	<!-- Profile Aware Beans -->
	<!-- Development -->
	<beans profile="development">
	    <bean autowire-candidate="true" id="testMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	        <property name="host" value="smtp.gmail.com"/>
	        <property name="port" value="465"/>
	        <property name="username" value="francisco.gonzalez2006@gmail.com"/>
	        <property name="password" value="dvdwphtthajpcvkq"/>
	        <property name="javaMailProperties">
	            <props>
	            	<prop key="mail.smtp.auth">true</prop>
	            	<prop key="mail.smtp.socketFactory.port">465</prop>
	                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
	                <prop key="mail.smtp.socketFactory.fallback">false</prop>
	                <prop key="mail.debug">false</prop>
	            </props>
	        </property>
	    </bean>
		<bean autowire-candidate="false" id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	        <property name="host" value="mail-app.unlp.edu.ar"/>
	        <property name="username" value=""/>
	        <property name="password" value=""/>
	        <property name="javaMailProperties">
	            <props>
	            	<prop key="mail.smtp.auth">false</prop>
	                <prop key="mail.debug">true</prop>
	            </props>
	        </property>
	    </bean>
	</beans>

	<!-- Test -->
	<beans profile="test">
		<!-- Wee need to define the DataSource here and then bind it manually -->
		<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName" value="org.postgresql.Driver" />
			<property name="url" value="jdbc:postgresql://localhost:5432/ibpnh" />
			<property name="username" value="postgres" />
			<property name="password" value="postgres" />
			<property name="maxActive" value="20" />
			<property name="maxIdle" value="10" />
			<property name="maxWait" value="-1" />
		</bean>
		<bean class="org.ibpnh.core.test.jndi.JndiBinder" init-method="initBinder">
			<property name="jndiName" value="java:comp/env/jdbc/ibpnhDS"></property>
		</bean>
				
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	        <property name="host" value="smtp.gmail.com"/>
	        <property name="port" value="25"/>
	        <property name="username" value="francisco.gonzalez2006@gmail.com"/>
	        <property name="password" value="rlslwntgvxzgbfra"/>
	        <property name="javaMailProperties">
	            <props>
	            	<prop key="mail.smtp.auth">true</prop>
	            	<prop key="mail.smtp.socketFactory.port">465</prop>
	                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
	                <prop key="mail.smtp.socketFactory.fallback">false</prop>
	                <prop key="mail.debug">false</prop>
	            </props>
	        </property>
	    </bean>
	</beans>

	<!-- Profile Unaware Beans -->
	<beans>
		<!-- EntityManagerHelper Config -->
		<bean id="entityManagerHolder" class="org.ibpnh.core.dao.EntityManagerHolder" scope="singleton">
			<constructor-arg value="${jpa.persistenceFile.location}"></constructor-arg>
			<constructor-arg value="${jpa.persistenceUnitName}"></constructor-arg>
		</bean>

		<!-- Dozer Mapper Config -->
		<bean id="mapper" class="org.dozer.DozerBeanMapper" scope="singleton">
			<property name="mappingFiles">
				<list>
					<value>${dozer.mappingFile.main}</value>
				</list>
			</property>
		</bean>

		<!-- JSON -->
		<bean id="gson" class="org.ibpnh.core.json.GsonSpringFactoryBean" scope="singleton" />

		<!-- Services -->
		<!-- Alert -->
		<bean class="org.ibpnh.core.dao.alert.AlertDaoImpl" scope="prototype" />
		<bean id="alertSrvMqImpl" class="org.ibpnh.core.services.alert.AlertSrvMqImpl" scope="singleton" />

		<!-- Alert MQ Services -->
		<bean id="mqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"
			p:brokerURL="${jms.url}" p:password="${jms.password}" p:userName="${jms.username}" />

		<bean id="mqCachedConnectionFactory"
			class="org.springframework.jms.connection.CachingConnectionFactory"
			p:targetConnectionFactory-ref="mqConnectionFactory"
			p:sessionCacheSize="10" />

		<!-- JMS Producers -->
		<bean id="alertProducerMq"
			class="org.ibpnh.core.services.alert.producer.AlertProducerMq">
			<property name="jmsDestination" value="${jms.alert.queue.name}" />
		</bean>

		<!-- Cache -->
		<!--<bean id="hotRodUserCacheImpl"-->
			<!--class="org.ibpnh.core.services.caching.client.hotrod.HotRodUserCacheImpl"-->
			<!--scope="singleton">-->
			<!--<property name="servers" value="${cache.servers}" />-->
			<!--<property name="userCacheName" value="${cache.userCacheName}" />-->
			<!--<property name="parameterCacheName" value="${cache.parameterCacheName}" />-->
			<!--<property name="userDuration" value="${cache.userCache.duration}" />-->
			<!--<property name="timeUnit" value="${cache.userCache.timeUnit}" />-->
		<!--</bean>-->
		<bean id="mockUserCacheImpl" class="org.ibpnh.core.services.caching.client.mock.UserCacheManagerMockImpl" scope="singleton"></bean>
		<bean id="mockParameterCacheImpl" class="org.ibpnh.core.services.caching.client.mock.ParameterCacheManagerMockImpl" scope="singleton"></bean>

		<!-- DAOs that need initializing -->
		<bean id="parameterDao" class="org.ibpnh.core.dao.configuration.parameter.ParameterDaoImpl" scope="singleton" init-method="init"/>


		<!-- Default Charset Post Processor -->
		<bean id="httpStringMessageConverterOverridePostProcessor" class="org.ibpnh.core.utils.HttpStringMessageConverterOverridePostProcessor"/>
		
		<bean class = "org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		</bean>
	</beans>
</beans>