<?xml version="1.0" encoding="UTF-8"?>
<!--
Repository and Service layers
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:sws="http://www.springframework.org/schema/web-services"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

	<sws:annotation-driven />
	<context:annotation-config /> <!-- This Enables Autowiring -->
	<context:property-placeholder location='classpath:config.properties' />
    <import resource="daoServletContext.xml"/>
    <import resource="ctrlServletContext.xml"/>
    <import resource="fxServletContext.xml"/>
    
    <!-- Test Beans -->
    <beans profile="test">
    	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
	    	<property name="scopes">
		    	<map>
		    		<entry key="request">
		    			<bean class="org.springframework.context.support.SimpleThreadScope"/>
		   			</entry>
		   			<entry key="session">
		   				<bean class="org.springframework.context.support.SimpleThreadScope"/>
		  			</entry>
		        </map>
	    	</property>
		</bean>
    </beans>
    
    <!-- Profile Unaware Beans -->
    <beans>
    	<!-- Listeners & Container -->
		<bean id="alertMessageListener" class="org.ibpnh.core.services.alert.consumer.AlertAsyncConsumerMq" />
				
    	<jms:listener-container container-type="default"
			connection-factory="mqCachedConnectionFactory" acknowledge="auto" concurrency="2-20">

			<!-- jms listeners -->
			<jms:listener destination="${jms.alert.queue.name}" ref="alertMessageListener" method="onMessage"/>
		</jms:listener-container>
		
    	<task:scheduler id="scheduler" pool-size="40"/>
    	<task:executor id="executorWithPoolSizeRange" pool-size="10-30" queue-capacity="150"/>
    	
    	<!-- The quartz scheduler configuration -->
    	<bean id="jobFactoryBean" class="org.ibpnh.core.utils.quartz.AutowiringSpringBeanJobFactory"/>
    	<bean id="quarzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">
    		<property name="waitForJobsToCompleteOnShutdown" value="true" /> 
    		<property name="jobFactory" ref="jobFactoryBean"/>
    		<property name="triggers">
    			<list>
    				<!-- Jobs -->
    				<!--<bean class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
    					<!--<property name="jobDetail">-->
    						<!--<bean id="permanenceAlertJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->
								<!--<property name="jobClass" value="org.ibpnh.core.job.PermanenceAlertJob" />-->
								<!--<property name="durability" value="true" />-->
							<!--</bean>-->
						<!--</property>-->
    					<!--<property name="cronExpression" value="0 * * * * ?"/>-->
    					<!--<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />-->
    				<!--</bean>-->
    			</list>
    		</property>
    	</bean>		
    	
    	<!-- Dynamic Jobs -->
    	<bean id="mailJobScheduler" class="org.ibpnh.core.services.mail.MailJobSchedulerQuartzImpl"  depends-on="quarzScheduler" init-method="scheduleMails"/>
    	<bean id="genericMailSenderJob" class="org.ibpnh.core.services.mail.job.GenericMailSenderJob" scope="prototype"/>
    	<bean id="mailSenderTask" class="org.ibpnh.core.services.mail.job.MailSenderTask" scope="prototype"/>
    	    	
    	<bean id="messageSolver" class="org.ibpnh.core.web.MessageSolver" init-method="init">
    		<property name="defaultMessageLocale" value="${message.defaultMessageLocale}" />
    	</bean>
    	<bean id="webContextHolder" class="org.ibpnh.core.web.WebContextHolder" scope="request">
    		<aop:scoped-proxy/>
    	</bean>
    	
    	<!-- I18N -->
		<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		    <property name="basename" value="classpath:messages/messages"/>
		    <property name="defaultEncoding" value="UTF-8"/>
		    <property name="fallbackToSystemLocale" value="false"/>
		</bean>
		
		<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		    <property name="defaultLocale" value="es" />
		</bean>
		
    	<bean id="webConxtextHolderInterceptor" class="org.ibpnh.core.web.interceptors.WebContextHolderInterceptor" scope="prototype"/>
    	<bean id="tokenAuthenticationInterceptor" class="org.ibpnh.core.web.interceptors.TokenAuthenticationInterceptor" scope="prototype"/>
    
    	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    		<property name="interceptors">
    			<list>
    				<ref bean="webConxtextHolderInterceptor"/>
    				<ref bean="tokenAuthenticationInterceptor"/>
    			</list>
    		</property>
   		</bean>
   		
   		<!-- Services -->
		<!-- NONE -->
		<!-- Utils -->
		<!-- Password Utils -->
		<bean id="passwordUtils" class="org.ibpnh.core.utils.PasswordUtils" scope="singleton" />
		
		<!-- BigDecimal Utils -->
		<bean id="bigDecimalUtils" class="org.ibpnh.core.utils.BigDecimalUtils" scope="singleton" />
		
		<!-- Date Utils -->
		<bean id="dateUtils" class="org.ibpnh.core.utils.DateUtilsImpl" init-method="init" scope="singleton" />
    </beans>
</beans>